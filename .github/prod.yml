name: CI/CD Pipeline for Production

on:
  push:
    branches:
      - master  # Triggers the pipeline when code is pushed to 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Create .env file
        run: |
          cp .env.production .env  # Use production environment variables
          ls -al  # List the files to verify the .env exists

      # Build and run Docker containers for production
      - name: Build and run Docker containers
        run: |
          docker-compose -f docker-compose.prod.yml up --build -d  # Use production Docker Compose file

      # Deployment to production server
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_Key }}

      - name: Deploy to Production Server
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@3.140.216.75 << 'EOF'
            cd quakes-near-you
            echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> .env
            echo "REACT_APP_API_URL=${{ secrets.PROD_REACT_APP_API_URL }}" >> .env
            git pull
            docker-compose -f docker-compose.prod.yml pull
            docker-compose up -d
          EOF
